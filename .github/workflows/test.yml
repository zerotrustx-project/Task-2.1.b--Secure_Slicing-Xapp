name: Testing Secure Slicing xApp
on:
  push:
    branches:
    - testing
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: Ubuntu-20.04
    timeout-minutes: 90  
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise will fail to push refs to dest repo

    - name: Install Dependencies
      run: |
          export ORAN_REPO=release
          export DEBIAN_FRONTEND=noninteractive
          export TZ=America/Chicago
          export MDCLOG_VERSION=0.1.1-1
          export RMR_VERSION=4.4.6
          sudo apt-get update 
          sudo apt-get install -y cmake python3-pip wget g++ libssl-dev rapidjson-dev git ca-certificates curl gnupg apt-transport-https apt-utils pkg-config autoconf libtool libcurl4-openssl-dev
          curl -s https://packagecloud.io/install/repositories/o-ran-sc/release/script.deb.sh | sudo os=debian dist=stretch bash
          sudo apt-get install -y mdclog=$MDCLOG_VERSION mdclog-dev=$MDCLOG_VERSION rmr=$RMR_VERSION rmr-dev=$RMR_VERSION
          rm -rf var/lib/apt/lists/*

    - name: Compile gtest
      run: |
          wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
          tar xf release-1.8.0.tar.gz
          cd googletest-release-1.8.0
          cmake -DBUILD_SHARED_LIBS=ON .
          make
          sudo cp -a googletest/include/gtest /usr/include
          sudo cp -a googlemock/gtest/libgtest_main.so googlemock/gtest/libgtest.so /usr/lib/
          sudo make install
          sudo ldconfig -v | grep gtest

    - name: Compile xapp frame
      run: |
          cd /tmp 
          git clone https://gitlab.flux.utah.edu/powderrenewpublic/xapp-frame-cpp
          cd xapp-frame-cpp
          mkdir -p build && cd build
          sudo cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDEV_PKG=1 ..
          sudo make && sudo make install && sudo ldconfig
          cd /tmp && rm -rf /tmp/xapp-frame-cpp

    - name: Compile asn1c
      run: |
          cd /tmp
          git clone https://gitlab.flux.utah.edu/powderrenewpublic/asn1c-eurecom asn1c
          cd asn1c
          git checkout f12568d617dbf48497588f8e227d70388fa217c9
          autoreconf -iv
          ./configure
          sudo make install
          sudo ldconfig
          cd ..
          sudo rm -rf /tmp/asn1c

    - name: Compile Pistache and InfluxDB
      run: |
          cd /tmp 
          git clone https://gitlab.flux.utah.edu/powderrenewpublic/pistache
          cd pistache && mkdir build && cd build
          cmake ../ && sudo make install && sudo ldconfig
          cd .. && sudo rm -rf /tmp/pistache
          cd /tmp


          git clone https://github.com/offa/influxdb-cxx
          cd influxdb-cxx
          git checkout 6b76bd02f26166e03888214914e5f9a000feb7d8
          mkdir -p build && cd build
          cmake ../ && sudo make install && sudo ldconfig
          cd .. && sudo rm -rf /tmp/influxdb-cxx





    - name: Building Secure Slicing xApp
      run: |
          sudo cp -r . /nexran

          cd /nexran
          sudo rm -rf build && sudo mkdir build && cd build \
          && ( [ ! -e /nexran/lib/e2ap/messages/e2ap-v01.00.asn1 ] \
              && sudo mkdir -p /nexran/lib/e2ap/messages/generated \
              && curl https://www.emulab.net/downloads/johnsond/profile-oai-oran/E2AP-v01.00-generated-bindings.tar.gz | sudo tar -xzv -C /nexran/lib/e2ap/messages/generated \
              && sudo echo "RIC_GENERATED_E2AP_BINDING_DIR:STRING=/nexran/lib/e2ap/messages/generated/E2AP-v01.00" >> CMakeCache.txt ) \
            || true \
          && ( [ ! -e /nexran/lib/e2sm/messages/e2sm-kpm-v01.00.asn1 ] \
              && sudo mkdir -p /nexran/lib/e2sm/messages/generated \
              && curl https://www.emulab.net/downloads/johnsond/profile-oai-oran/E2SM-KPM-ext-generated-bindings.tar.gz | sudo tar -xzv -C /nexran/lib/e2sm/messages/generated \
              && sudo echo "RIC_GENERATED_E2SM_KPM_BINDING_DIR:STRING=/nexran/lib/e2sm/messages/generated/E2SM-KPM" >> CMakeCache.txt ) \
            || true \
          && sudo cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ../ \
          && sudo make install && sudo ldconfig

    - name: Testing Secure Slicing xApp
      run: |
          cd /nexran/build/src
          ctest
